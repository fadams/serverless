#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Create a really simple Docker container registry for use by
# a Kubernetes cluster such as kind.

# N.B. this is just a toy registry for experiments to avoid having to use
# the public Docker Hub. Clearly for production a more production ready
# private repository is required.

# Generate self-signed certificate
# Using SSL with an IP address instead of DNS
# https://naveensnayak.com/2017/05/08/self-signed-certificates-with-san/
# https://bowerstudios.com/node/1007
# https://support.citrix.com/article/CTX135602
# https://hackernoon.com/create-a-private-local-docker-registry-5c79ce912620
# https://blog.container-solutions.com/adding-self-signed-registry-certs-docker-mac
#
# cp /etc/ssl/openssl.cnf .
# modify openssl.cnf as follows:
# 1. uncomment (by removing the hash mark)
#    req_extensions = v3_req # The extensions to add to a certificate request
# 2. Modify the v3_req section as follows:
#    [ v3_req ]
#
#    # Extensions to add to a certificate request
#
#    basicConstraints = CA:FALSE
#    keyUsage = nonRepudiation, digitalSignature, keyEncipherment
#
#    [ v3_ca ]
#    subjectAltName=@alt_names
#
# .......
#
#    [alt_names]
#    IP.1 = 192.168.0.12
#
# mkdir -p certs
# openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key -x509 -days 365 -out certs/domain.crt -config openssl.cnf
#
# Use $(hostname -I | awk '{print $1}') value as CN
#
# Verify
# openssl x509 -in certs/domain.crt -noout -text

# registry URL is $(hostname -I | awk '{print $1}')

# docker pull ubuntu
# docker tag ubuntu $(hostname -I | awk '{print $1}')/ubuntu
# docker push $(hostname -I | awk '{print $1}')/ubuntu

docker run --rm -d \
    --name registry \
    -v $PWD/certs:/certs \
    -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \
    -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
    -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \
    -p 443:443 \
    registry:2

#     -p 5000:5000 \

# http://localhost:5000/v2/_catalog
# Registry browser UI
# https://hub.docker.com/r/klausmeyer/docker-registry-browser/
#docker run --rm -d \
#    --name registry-browser \
#    -p 5001:8080 \
#    -e DOCKER_REGISTRY_URL=http://localhost:5000 \
#    klausmeyer/docker-registry-browser
    
